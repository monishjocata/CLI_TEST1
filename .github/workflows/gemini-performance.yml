name: 'Performance Optimizer'

on:
  pull_request:
    types: [opened, synchronize]
  push:
    branches: [main, master]
  workflow_dispatch:
    inputs:
      analysis_depth:
        description: 'Analysis depth (quick/detailed)'
        required: false
        default: 'detailed'

jobs:
  performance-analysis:
    runs-on: ubuntu-latest
    permissions:
      issues: write
      pull-requests: write
      contents: read
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: AI Performance Analysis
        uses: google-github-actions/run-gemini-cli@v0
        env:
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }
        with:
          prompt: |
            Analyze this codebase for performance optimization opportunities. Focus on:
            
            1. Algorithm efficiency and Big O complexity analysis
            2. Memory usage optimization and potential memory leaks
            3. Database queries optimization and caching opportunities
            4. Network calls efficiency and batching
            5. Frontend performance including loading times and rendering
            6. Caching strategies implementation opportunities
            7. Resource management for CPU and I/O optimization
            8. Scalability for horizontal and vertical scaling readiness
            
            Analysis depth: ${{ github.event.inputs.analysis_depth || 'detailed' }}
            
            Provide:
            - Performance metrics and bottleneck identification
            - Specific optimization recommendations with code examples
            - Implementation examples for improvements
            - Expected performance gains from each optimization
            - Tools and techniques for performance monitoring
            - Performance testing strategies
            
            Focus on practical improvements with measurable impact and provide specific file and line references where applicable.