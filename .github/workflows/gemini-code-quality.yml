name: 'Code Quality Analyzer'

on:
  pull_request:
    types: [opened, synchronize]
  push:
    branches: [main, master, develop]
  workflow_dispatch:
    inputs:
      focus_area:
        description: 'Focus area (all/testing/documentation/refactoring)'
        required: false
        default: 'all'

jobs:
  code-quality-analysis:
    runs-on: ubuntu-latest
    permissions:
      issues: write
      pull-requests: write
      contents: read
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: AI Code Quality Analysis
        uses: google-github-actions/run-gemini-cli@v1
        with:
          prompt: |
            Conduct a comprehensive code quality analysis of this repository. Focus on:
            
            1. Code Structure - Organization, modularity, separation of concerns
            2. Readability - Clarity, naming conventions, comments
            3. Maintainability - Ease of modification and extension
            4. Testing - Test coverage, quality, and completeness
            5. Documentation - Code comments, README, API docs
            6. Best Practices - Language idioms, design patterns
            7. Technical Debt - Areas needing refactoring
            8. Consistency - Coding standards adherence
            
            Analysis Focus: ${{ github.event.inputs.focus_area || 'all' }}
            
            Provide detailed assessment with:
            - Quality scores and metrics for each area
            - Specific improvement recommendations with examples
            - Refactoring suggestions with code samples
            - Testing enhancement ideas
            - Documentation improvements needed
            - Best practice implementations
            - Technical debt reduction strategies
            - Implementation roadmap for improvements
            
            Include specific file and line references where applicable. Provide concrete, actionable recommendations that can be implemented immediately.