name: 'Manual Gemini Dispatch'

on:
  workflow_dispatch:
    inputs:
      item_type:
        description: 'The type of item to analyze'
        required: true
        type: choice
        options:
        - pull_request
        - issue
      item_number:
        description: 'The number of the pull request or issue'
        required: true
        type: string
      additional_context:
        description: 'Optional additional context for the analysis'
        required: false
        type: string

jobs:
  dispatch:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      issues: write
      contents: read

    steps:
      - name: 'Checkout repository'
        uses: 'actions/checkout@v4'

      - name: 'Configure Gemini Settings from file'
        run: |
          mkdir -p /home/runner/.gemini/
          if [ -f ".gemini/settings.json" ]; then
            cp .gemini/settings.json /home/runner/.gemini/settings.json
            echo "Gemini settings configured."
          else
            echo "ERROR: .gemini/settings.json not found!"
            exit 1
          fi
        shell: bash

      - name: 'Fetch Issue Details (if applicable)'
        if: github.event.inputs.item_type == 'issue'
        id: get_issue
        uses: actions/github-script@v7
        with:
          script: |
            const { data: issue } = await github.rest.issues.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: ${{ github.event.inputs.item_number }},
            });
            core.setOutput('title', issue.title);
            core.setOutput('body', issue.body);

      - name: 'Run Gemini Analysis'
        uses: 'google-github-actions/run-gemini-cli@v0'
        env:
          GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'
          PULL_REQUEST_NUMBER: "${{ github.event.inputs.item_type == 'pull_request' && github.event.inputs.item_number || '' }}"
          ISSUE_NUMBER: "${{ github.event.inputs.item_type == 'issue' && github.event.inputs.item_number || '' }}"
          REPOSITORY: '${{ github.repository }}'
        with:
          prompt: |-
            # Role: AI Code Review and Issue Analysis Agent

            ## Instructions
            You have been triggered manually to analyze a GitHub item.
            Additional context for your analysis: "${{ github.event.inputs.additional_context }}"

            ${{ github.event.inputs.item_type == 'pull_request' && '
            ### Task: Review Pull Request
            - Analyze the pull request diff using the `mcp__github__get_pull_request_diff` tool.
            - Provide feedback on correctness, security, and maintainability.
            - Use `mcp__github__add_comment_to_pending_review` for each finding.
            - Submit your review with a summary using `mcp__github__submit_pending_pull_request_review`.
            ' || '' }}

            ${{ github.event.inputs.item_type == 'issue' && '
            ### Task: Analyze Issue
            - The issue title is: "${{ steps.get_issue.outputs.title }}"
            - The issue body is: "${{ steps.get_issue.outputs.body }}"
            - Provide a helpful and constructive comment based on the issue content.
            - Post your response using the `mcp__github__create_issue_comment` tool.
            ' || '' }}
