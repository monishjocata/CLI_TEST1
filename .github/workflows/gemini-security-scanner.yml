name: 'Security Scanner'

on:
  pull_request:
    types: [opened, synchronize]
  push:
    branches: [main, master, develop]
  schedule:
    - cron: '0 2 * * 1'
  workflow_dispatch:

jobs:
  security-analysis:
    runs-on: ubuntu-latest
    permissions:
      issues: write
      pull-requests: write
      contents: read
      security-events: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: AI Security Analysis
        uses: google-github-actions/run-gemini-cli@v0
        env:
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }
        with:
          prompt: |
            Perform a comprehensive security analysis of this codebase focusing on:
            
            1. Input validation vulnerabilities
            2. SQL/NoSQL injection risks
            3. XSS (Cross-Site Scripting) vulnerabilities
            4. Authentication & authorization issues
            5. Data exposure risks
            6. Dependency vulnerabilities
            7. Configuration security
            8. API security issues
            
            Provide:
            - Critical vulnerabilities requiring immediate attention
            - Medium risk issues that should be addressed
            - Best practice recommendations
            - Security hardening suggestions
            - Specific code examples for fixes
            
            Focus on practical, actionable security improvements with specific file and line references where possible.